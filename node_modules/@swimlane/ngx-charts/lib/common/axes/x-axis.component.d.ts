import { SimpleChanges, EventEmitter, OnChanges } from '@angular/core';
import { XAxisTicksComponent } from './x-axis-ticks.component';
import * as ɵngcc0 from '@angular/core';
export declare class XAxisComponent implements OnChanges {
    xScale: any;
    dims: any;
    trimTicks: boolean;
    rotateTicks: boolean;
    maxTickLength: number;
    tickFormatting: any;
    showGridLines: boolean;
    showLabel: any;
    labelText: any;
    ticks: any[];
    xAxisTickInterval: any;
    xAxisTickCount: any;
    xOrient: string;
    xAxisOffset: number;
    dimensionsChanged: EventEmitter<any>;
    xAxisClassName: string;
    tickArguments: any;
    transform: any;
    labelOffset: number;
    fill: string;
    stroke: string;
    tickStroke: string;
    strokeWidth: string;
    padding: number;
    ticksComponent: XAxisTicksComponent;
    ngOnChanges(changes: SimpleChanges): void;
    update(): void;
    emitTicksHeight({ height }: {
        height: any;
    }): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<XAxisComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<XAxisComponent, "g[ngx-charts-x-axis]", never, { "rotateTicks": "rotateTicks"; "showGridLines": "showGridLines"; "xOrient": "xOrient"; "xAxisOffset": "xAxisOffset"; "xScale": "xScale"; "dims": "dims"; "trimTicks": "trimTicks"; "maxTickLength": "maxTickLength"; "tickFormatting": "tickFormatting"; "showLabel": "showLabel"; "labelText": "labelText"; "ticks": "ticks"; "xAxisTickInterval": "xAxisTickInterval"; "xAxisTickCount": "xAxisTickCount"; }, { "dimensionsChanged": "dimensionsChanged"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieC1heGlzLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ4LWF4aXMuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaW1wbGVDaGFuZ2VzLCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgWEF4aXNUaWNrc0NvbXBvbmVudCB9IGZyb20gJy4veC1heGlzLXRpY2tzLmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBYQXhpc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgeFNjYWxlOiBhbnk7XG4gICAgZGltczogYW55O1xuICAgIHRyaW1UaWNrczogYm9vbGVhbjtcbiAgICByb3RhdGVUaWNrczogYm9vbGVhbjtcbiAgICBtYXhUaWNrTGVuZ3RoOiBudW1iZXI7XG4gICAgdGlja0Zvcm1hdHRpbmc6IGFueTtcbiAgICBzaG93R3JpZExpbmVzOiBib29sZWFuO1xuICAgIHNob3dMYWJlbDogYW55O1xuICAgIGxhYmVsVGV4dDogYW55O1xuICAgIHRpY2tzOiBhbnlbXTtcbiAgICB4QXhpc1RpY2tJbnRlcnZhbDogYW55O1xuICAgIHhBeGlzVGlja0NvdW50OiBhbnk7XG4gICAgeE9yaWVudDogc3RyaW5nO1xuICAgIHhBeGlzT2Zmc2V0OiBudW1iZXI7XG4gICAgZGltZW5zaW9uc0NoYW5nZWQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHhBeGlzQ2xhc3NOYW1lOiBzdHJpbmc7XG4gICAgdGlja0FyZ3VtZW50czogYW55O1xuICAgIHRyYW5zZm9ybTogYW55O1xuICAgIGxhYmVsT2Zmc2V0OiBudW1iZXI7XG4gICAgZmlsbDogc3RyaW5nO1xuICAgIHN0cm9rZTogc3RyaW5nO1xuICAgIHRpY2tTdHJva2U6IHN0cmluZztcbiAgICBzdHJva2VXaWR0aDogc3RyaW5nO1xuICAgIHBhZGRpbmc6IG51bWJlcjtcbiAgICB0aWNrc0NvbXBvbmVudDogWEF4aXNUaWNrc0NvbXBvbmVudDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICB1cGRhdGUoKTogdm9pZDtcbiAgICBlbWl0VGlja3NIZWlnaHQoeyBoZWlnaHQgfToge1xuICAgICAgICBoZWlnaHQ6IGFueTtcbiAgICB9KTogdm9pZDtcbn1cbiJdfQ==
import { ElementRef, AfterViewInit, Renderer2 } from '@angular/core';
import { PlacementTypes } from './position';
import { StyleTypes } from './style.type';
import { AlignmentTypes } from './alignment.type';
import * as ɵngcc0 from '@angular/core';
export declare class TooltipContentComponent implements AfterViewInit {
    element: ElementRef;
    private renderer;
    host: any;
    showCaret: boolean;
    type: StyleTypes;
    placement: PlacementTypes;
    alignment: AlignmentTypes;
    spacing: number;
    cssClass: string;
    title: string;
    template: any;
    context: any;
    caretElm: any;
    readonly cssClasses: string;
    constructor(element: ElementRef, renderer: Renderer2);
    ngAfterViewInit(): void;
    position(): void;
    positionContent(nativeElm: any, hostDim: any, elmDim: any): void;
    positionCaret(hostDim: any, elmDim: any): void;
    checkFlip(hostDim: any, elmDim: any): void;
    onWindowResize(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TooltipContentComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TooltipContentComponent, "ngx-tooltip-content", never, { "placement": "placement"; "host": "host"; "showCaret": "showCaret"; "type": "type"; "alignment": "alignment"; "spacing": "spacing"; "cssClass": "cssClass"; "title": "title"; "template": "template"; "context": "context"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidG9vbHRpcC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgQWZ0ZXJWaWV3SW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQbGFjZW1lbnRUeXBlcyB9IGZyb20gJy4vcG9zaXRpb24nO1xuaW1wb3J0IHsgU3R5bGVUeXBlcyB9IGZyb20gJy4vc3R5bGUudHlwZSc7XG5pbXBvcnQgeyBBbGlnbm1lbnRUeXBlcyB9IGZyb20gJy4vYWxpZ25tZW50LnR5cGUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVG9vbHRpcENvbnRlbnRDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgICBlbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgaG9zdDogYW55O1xuICAgIHNob3dDYXJldDogYm9vbGVhbjtcbiAgICB0eXBlOiBTdHlsZVR5cGVzO1xuICAgIHBsYWNlbWVudDogUGxhY2VtZW50VHlwZXM7XG4gICAgYWxpZ25tZW50OiBBbGlnbm1lbnRUeXBlcztcbiAgICBzcGFjaW5nOiBudW1iZXI7XG4gICAgY3NzQ2xhc3M6IHN0cmluZztcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIHRlbXBsYXRlOiBhbnk7XG4gICAgY29udGV4dDogYW55O1xuICAgIGNhcmV0RWxtOiBhbnk7XG4gICAgcmVhZG9ubHkgY3NzQ2xhc3Nlczogc3RyaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIHBvc2l0aW9uKCk6IHZvaWQ7XG4gICAgcG9zaXRpb25Db250ZW50KG5hdGl2ZUVsbTogYW55LCBob3N0RGltOiBhbnksIGVsbURpbTogYW55KTogdm9pZDtcbiAgICBwb3NpdGlvbkNhcmV0KGhvc3REaW06IGFueSwgZWxtRGltOiBhbnkpOiB2b2lkO1xuICAgIGNoZWNrRmxpcChob3N0RGltOiBhbnksIGVsbURpbTogYW55KTogdm9pZDtcbiAgICBvbldpbmRvd1Jlc2l6ZSgpOiB2b2lkO1xufVxuIl19
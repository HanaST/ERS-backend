import { EventEmitter, TemplateRef } from '@angular/core';
import { ViewDimensions } from '../common/view-dimensions.helper';
import { ColorHelper } from '../common/color.helper';
import { BaseChartComponent } from '../common/base-chart.component';
import * as ɵngcc0 from '@angular/core';
export declare class AreaChartComponent extends BaseChartComponent {
    legend: any;
    legendTitle: string;
    legendPosition: string;
    state: any;
    xAxis: any;
    yAxis: any;
    baseValue: any;
    autoScale: any;
    showXAxisLabel: any;
    showYAxisLabel: any;
    xAxisLabel: any;
    yAxisLabel: any;
    timeline: any;
    gradient: boolean;
    showGridLines: boolean;
    curve: any;
    activeEntries: any[];
    schemeType: string;
    trimXAxisTicks: boolean;
    trimYAxisTicks: boolean;
    rotateXAxisTicks: boolean;
    maxXAxisTickLength: number;
    maxYAxisTickLength: number;
    xAxisTickFormatting: any;
    yAxisTickFormatting: any;
    xAxisTicks: any[];
    yAxisTicks: any[];
    roundDomains: boolean;
    tooltipDisabled: boolean;
    xScaleMin: any;
    xScaleMax: any;
    yScaleMin: number;
    yScaleMax: number;
    activate: EventEmitter<any>;
    deactivate: EventEmitter<any>;
    tooltipTemplate: TemplateRef<any>;
    seriesTooltipTemplate: TemplateRef<any>;
    dims: ViewDimensions;
    xSet: any;
    xDomain: any;
    yDomain: any;
    seriesDomain: any;
    xScale: any;
    yScale: any;
    transform: string;
    colors: ColorHelper;
    clipPathId: string;
    clipPath: string;
    scaleType: string;
    series: any;
    margin: number[];
    hoveredVertical: any;
    xAxisHeight: number;
    yAxisWidth: number;
    filteredDomain: any;
    legendOptions: any;
    timelineWidth: any;
    timelineHeight: number;
    timelineXScale: any;
    timelineYScale: any;
    timelineXDomain: any;
    timelineTransform: any;
    timelinePadding: number;
    update(): void;
    updateTimeline(): void;
    getXDomain(): any[];
    getYDomain(): any[];
    getSeriesDomain(): any[];
    getXScale(domain: any, width: any): any;
    getYScale(domain: any, height: any): any;
    getScaleType(values: any): string;
    isDate(value: any): boolean;
    updateDomain(domain: any): void;
    updateHoveredVertical(item: any): void;
    hideCircles(): void;
    onClick(data: any, series?: any): void;
    trackBy(index: any, item: any): string;
    setColors(): void;
    getLegendOptions(): {
        scaleType: string;
        colors: any;
        domain: any[];
        title: any;
        position: string;
    };
    updateYAxisWidth({ width }: {
        width: any;
    }): void;
    updateXAxisHeight({ height }: {
        height: any;
    }): void;
    onActivate(item: any): void;
    onDeactivate(item: any): void;
    deactivateAll(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AreaChartComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AreaChartComponent, "ngx-charts-area-chart", never, { "legendTitle": "legendTitle"; "legendPosition": "legendPosition"; "baseValue": "baseValue"; "showGridLines": "showGridLines"; "curve": "curve"; "activeEntries": "activeEntries"; "trimXAxisTicks": "trimXAxisTicks"; "trimYAxisTicks": "trimYAxisTicks"; "rotateXAxisTicks": "rotateXAxisTicks"; "maxXAxisTickLength": "maxXAxisTickLength"; "maxYAxisTickLength": "maxYAxisTickLength"; "roundDomains": "roundDomains"; "tooltipDisabled": "tooltipDisabled"; "legend": "legend"; "state": "state"; "xAxis": "xAxis"; "yAxis": "yAxis"; "autoScale": "autoScale"; "showXAxisLabel": "showXAxisLabel"; "showYAxisLabel": "showYAxisLabel"; "xAxisLabel": "xAxisLabel"; "yAxisLabel": "yAxisLabel"; "timeline": "timeline"; "gradient": "gradient"; "schemeType": "schemeType"; "xAxisTickFormatting": "xAxisTickFormatting"; "yAxisTickFormatting": "yAxisTickFormatting"; "xAxisTicks": "xAxisTicks"; "yAxisTicks": "yAxisTicks"; "xScaleMin": "xScaleMin"; "xScaleMax": "xScaleMax"; "yScaleMin": "yScaleMin"; "yScaleMax": "yScaleMax"; }, { "activate": "activate"; "deactivate": "deactivate"; }, ["tooltipTemplate", "seriesTooltipTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJlYS1jaGFydC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYXJlYS1jaGFydC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQStGQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFZpZXdEaW1lbnNpb25zIH0gZnJvbSAnLi4vY29tbW9uL3ZpZXctZGltZW5zaW9ucy5oZWxwZXInO1xuaW1wb3J0IHsgQ29sb3JIZWxwZXIgfSBmcm9tICcuLi9jb21tb24vY29sb3IuaGVscGVyJztcbmltcG9ydCB7IEJhc2VDaGFydENvbXBvbmVudCB9IGZyb20gJy4uL2NvbW1vbi9iYXNlLWNoYXJ0LmNvbXBvbmVudCc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBcmVhQ2hhcnRDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ2hhcnRDb21wb25lbnQge1xuICAgIGxlZ2VuZDogYW55O1xuICAgIGxlZ2VuZFRpdGxlOiBzdHJpbmc7XG4gICAgbGVnZW5kUG9zaXRpb246IHN0cmluZztcbiAgICBzdGF0ZTogYW55O1xuICAgIHhBeGlzOiBhbnk7XG4gICAgeUF4aXM6IGFueTtcbiAgICBiYXNlVmFsdWU6IGFueTtcbiAgICBhdXRvU2NhbGU6IGFueTtcbiAgICBzaG93WEF4aXNMYWJlbDogYW55O1xuICAgIHNob3dZQXhpc0xhYmVsOiBhbnk7XG4gICAgeEF4aXNMYWJlbDogYW55O1xuICAgIHlBeGlzTGFiZWw6IGFueTtcbiAgICB0aW1lbGluZTogYW55O1xuICAgIGdyYWRpZW50OiBib29sZWFuO1xuICAgIHNob3dHcmlkTGluZXM6IGJvb2xlYW47XG4gICAgY3VydmU6IGFueTtcbiAgICBhY3RpdmVFbnRyaWVzOiBhbnlbXTtcbiAgICBzY2hlbWVUeXBlOiBzdHJpbmc7XG4gICAgdHJpbVhBeGlzVGlja3M6IGJvb2xlYW47XG4gICAgdHJpbVlBeGlzVGlja3M6IGJvb2xlYW47XG4gICAgcm90YXRlWEF4aXNUaWNrczogYm9vbGVhbjtcbiAgICBtYXhYQXhpc1RpY2tMZW5ndGg6IG51bWJlcjtcbiAgICBtYXhZQXhpc1RpY2tMZW5ndGg6IG51bWJlcjtcbiAgICB4QXhpc1RpY2tGb3JtYXR0aW5nOiBhbnk7XG4gICAgeUF4aXNUaWNrRm9ybWF0dGluZzogYW55O1xuICAgIHhBeGlzVGlja3M6IGFueVtdO1xuICAgIHlBeGlzVGlja3M6IGFueVtdO1xuICAgIHJvdW5kRG9tYWluczogYm9vbGVhbjtcbiAgICB0b29sdGlwRGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgeFNjYWxlTWluOiBhbnk7XG4gICAgeFNjYWxlTWF4OiBhbnk7XG4gICAgeVNjYWxlTWluOiBudW1iZXI7XG4gICAgeVNjYWxlTWF4OiBudW1iZXI7XG4gICAgYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGRlYWN0aXZhdGU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHRvb2x0aXBUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBzZXJpZXNUb29sdGlwVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgZGltczogVmlld0RpbWVuc2lvbnM7XG4gICAgeFNldDogYW55O1xuICAgIHhEb21haW46IGFueTtcbiAgICB5RG9tYWluOiBhbnk7XG4gICAgc2VyaWVzRG9tYWluOiBhbnk7XG4gICAgeFNjYWxlOiBhbnk7XG4gICAgeVNjYWxlOiBhbnk7XG4gICAgdHJhbnNmb3JtOiBzdHJpbmc7XG4gICAgY29sb3JzOiBDb2xvckhlbHBlcjtcbiAgICBjbGlwUGF0aElkOiBzdHJpbmc7XG4gICAgY2xpcFBhdGg6IHN0cmluZztcbiAgICBzY2FsZVR5cGU6IHN0cmluZztcbiAgICBzZXJpZXM6IGFueTtcbiAgICBtYXJnaW46IG51bWJlcltdO1xuICAgIGhvdmVyZWRWZXJ0aWNhbDogYW55O1xuICAgIHhBeGlzSGVpZ2h0OiBudW1iZXI7XG4gICAgeUF4aXNXaWR0aDogbnVtYmVyO1xuICAgIGZpbHRlcmVkRG9tYWluOiBhbnk7XG4gICAgbGVnZW5kT3B0aW9uczogYW55O1xuICAgIHRpbWVsaW5lV2lkdGg6IGFueTtcbiAgICB0aW1lbGluZUhlaWdodDogbnVtYmVyO1xuICAgIHRpbWVsaW5lWFNjYWxlOiBhbnk7XG4gICAgdGltZWxpbmVZU2NhbGU6IGFueTtcbiAgICB0aW1lbGluZVhEb21haW46IGFueTtcbiAgICB0aW1lbGluZVRyYW5zZm9ybTogYW55O1xuICAgIHRpbWVsaW5lUGFkZGluZzogbnVtYmVyO1xuICAgIHVwZGF0ZSgpOiB2b2lkO1xuICAgIHVwZGF0ZVRpbWVsaW5lKCk6IHZvaWQ7XG4gICAgZ2V0WERvbWFpbigpOiBhbnlbXTtcbiAgICBnZXRZRG9tYWluKCk6IGFueVtdO1xuICAgIGdldFNlcmllc0RvbWFpbigpOiBhbnlbXTtcbiAgICBnZXRYU2NhbGUoZG9tYWluOiBhbnksIHdpZHRoOiBhbnkpOiBhbnk7XG4gICAgZ2V0WVNjYWxlKGRvbWFpbjogYW55LCBoZWlnaHQ6IGFueSk6IGFueTtcbiAgICBnZXRTY2FsZVR5cGUodmFsdWVzOiBhbnkpOiBzdHJpbmc7XG4gICAgaXNEYXRlKHZhbHVlOiBhbnkpOiBib29sZWFuO1xuICAgIHVwZGF0ZURvbWFpbihkb21haW46IGFueSk6IHZvaWQ7XG4gICAgdXBkYXRlSG92ZXJlZFZlcnRpY2FsKGl0ZW06IGFueSk6IHZvaWQ7XG4gICAgaGlkZUNpcmNsZXMoKTogdm9pZDtcbiAgICBvbkNsaWNrKGRhdGE6IGFueSwgc2VyaWVzPzogYW55KTogdm9pZDtcbiAgICB0cmFja0J5KGluZGV4OiBhbnksIGl0ZW06IGFueSk6IHN0cmluZztcbiAgICBzZXRDb2xvcnMoKTogdm9pZDtcbiAgICBnZXRMZWdlbmRPcHRpb25zKCk6IHtcbiAgICAgICAgc2NhbGVUeXBlOiBzdHJpbmc7XG4gICAgICAgIGNvbG9yczogYW55O1xuICAgICAgICBkb21haW46IGFueVtdO1xuICAgICAgICB0aXRsZTogYW55O1xuICAgICAgICBwb3NpdGlvbjogc3RyaW5nO1xuICAgIH07XG4gICAgdXBkYXRlWUF4aXNXaWR0aCh7IHdpZHRoIH06IHtcbiAgICAgICAgd2lkdGg6IGFueTtcbiAgICB9KTogdm9pZDtcbiAgICB1cGRhdGVYQXhpc0hlaWdodCh7IGhlaWdodCB9OiB7XG4gICAgICAgIGhlaWdodDogYW55O1xuICAgIH0pOiB2b2lkO1xuICAgIG9uQWN0aXZhdGUoaXRlbTogYW55KTogdm9pZDtcbiAgICBvbkRlYWN0aXZhdGUoaXRlbTogYW55KTogdm9pZDtcbiAgICBkZWFjdGl2YXRlQWxsKCk6IHZvaWQ7XG59XG4iXX0=
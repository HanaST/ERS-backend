import { ElementRef, EventEmitter, NgZone, OnChanges, OnInit, SimpleChange } from '@angular/core';
import { LatLng, LatLngBounds, Map, MapOptions } from 'leaflet';
import * as ɵngcc0 from '@angular/core';
export declare class LeafletDirective implements OnChanges, OnInit {
    private element;
    private zone;
    readonly DEFAULT_ZOOM: number;
    readonly DEFAULT_CENTER: LatLng;
    readonly DEFAULT_FPZ_OPTIONS: {};
    resizeTimer: any;
    map: Map;
    fitBoundsOptions: {};
    panOptions: {};
    zoomOptions: {};
    zoomPanOptions: {};
    options: MapOptions;
    mapReady: EventEmitter<Map>;
    zoom: number;
    center: LatLng;
    fitBounds: LatLngBounds;
    constructor(element: ElementRef, zone: NgZone);
    ngOnInit(): void;
    ngOnChanges(changes: {
        [key: string]: SimpleChange;
    }): void;
    getMap(): Map;
    onResize(): void;
    /**
     * Resize the map to fit it's parent container
     */
    private doResize();
    /**
     * Manage a delayed resize of the component
     */
    private delayResize();
    /**
     * Set the view (center/zoom) all at once
     * @param center The new center
     * @param zoom The new zoom level
     */
    private setView(center, zoom);
    /**
     * Set the map zoom level
     * @param zoom the new zoom level for the map
     */
    private setZoom(zoom);
    /**
     * Set the center of the map
     * @param center the center point
     */
    private setCenter(center);
    /**
     * Fit the map to the bounds
     * @param center the center point
     */
    private setFitBounds(latLngBounds);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<LeafletDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<LeafletDirective, "[leaflet]", never, { "fitBoundsOptions": "leafletFitBoundsOptions"; "panOptions": "leafletPanOptions"; "zoomOptions": "leafletZoomOptions"; "zoomPanOptions": "leafletZoomPanOptions"; "options": "leafletOptions"; "zoom": "leafletZoom"; "center": "leafletCenter"; "fitBounds": "leafletFitBounds"; }, { "mapReady": "leafletMapReady"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVhZmxldC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsibGVhZmxldC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFxREEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25DaGFuZ2VzLCBPbkluaXQsIFNpbXBsZUNoYW5nZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTGF0TG5nLCBMYXRMbmdCb3VuZHMsIE1hcCwgTWFwT3B0aW9ucyB9IGZyb20gJ2xlYWZsZXQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTGVhZmxldERpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25Jbml0IHtcbiAgICBwcml2YXRlIGVsZW1lbnQ7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHJlYWRvbmx5IERFRkFVTFRfWk9PTTogbnVtYmVyO1xuICAgIHJlYWRvbmx5IERFRkFVTFRfQ0VOVEVSOiBMYXRMbmc7XG4gICAgcmVhZG9ubHkgREVGQVVMVF9GUFpfT1BUSU9OUzoge307XG4gICAgcmVzaXplVGltZXI6IGFueTtcbiAgICBtYXA6IE1hcDtcbiAgICBmaXRCb3VuZHNPcHRpb25zOiB7fTtcbiAgICBwYW5PcHRpb25zOiB7fTtcbiAgICB6b29tT3B0aW9uczoge307XG4gICAgem9vbVBhbk9wdGlvbnM6IHt9O1xuICAgIG9wdGlvbnM6IE1hcE9wdGlvbnM7XG4gICAgbWFwUmVhZHk6IEV2ZW50RW1pdHRlcjxNYXA+O1xuICAgIHpvb206IG51bWJlcjtcbiAgICBjZW50ZXI6IExhdExuZztcbiAgICBmaXRCb3VuZHM6IExhdExuZ0JvdW5kcztcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmLCB6b25lOiBOZ1pvbmUpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBTaW1wbGVDaGFuZ2U7XG4gICAgfSk6IHZvaWQ7XG4gICAgZ2V0TWFwKCk6IE1hcDtcbiAgICBvblJlc2l6ZSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFJlc2l6ZSB0aGUgbWFwIHRvIGZpdCBpdCdzIHBhcmVudCBjb250YWluZXJcbiAgICAgKi9cbiAgICBwcml2YXRlIGRvUmVzaXplKCk7XG4gICAgLyoqXG4gICAgICogTWFuYWdlIGEgZGVsYXllZCByZXNpemUgb2YgdGhlIGNvbXBvbmVudFxuICAgICAqL1xuICAgIHByaXZhdGUgZGVsYXlSZXNpemUoKTtcbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIHZpZXcgKGNlbnRlci96b29tKSBhbGwgYXQgb25jZVxuICAgICAqIEBwYXJhbSBjZW50ZXIgVGhlIG5ldyBjZW50ZXJcbiAgICAgKiBAcGFyYW0gem9vbSBUaGUgbmV3IHpvb20gbGV2ZWxcbiAgICAgKi9cbiAgICBwcml2YXRlIHNldFZpZXcoY2VudGVyLCB6b29tKTtcbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIG1hcCB6b29tIGxldmVsXG4gICAgICogQHBhcmFtIHpvb20gdGhlIG5ldyB6b29tIGxldmVsIGZvciB0aGUgbWFwXG4gICAgICovXG4gICAgcHJpdmF0ZSBzZXRab29tKHpvb20pO1xuICAgIC8qKlxuICAgICAqIFNldCB0aGUgY2VudGVyIG9mIHRoZSBtYXBcbiAgICAgKiBAcGFyYW0gY2VudGVyIHRoZSBjZW50ZXIgcG9pbnRcbiAgICAgKi9cbiAgICBwcml2YXRlIHNldENlbnRlcihjZW50ZXIpO1xuICAgIC8qKlxuICAgICAqIEZpdCB0aGUgbWFwIHRvIHRoZSBib3VuZHNcbiAgICAgKiBAcGFyYW0gY2VudGVyIHRoZSBjZW50ZXIgcG9pbnRcbiAgICAgKi9cbiAgICBwcml2YXRlIHNldEZpdEJvdW5kcyhsYXRMbmdCb3VuZHMpO1xufVxuIl19
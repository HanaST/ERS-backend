import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { Subscription } from 'rxjs';
import { DataSource } from '../../lib/data-source/data-source';
import * as ɵngcc0 from '@angular/core';
export declare class PagerComponent implements OnChanges {
    source: DataSource;
    perPageSelect: any[];
    changePage: EventEmitter<any>;
    currentPerPage: any;
    protected pages: Array<any>;
    protected page: number;
    protected count: number;
    protected perPage: number;
    protected dataChangedSub: Subscription;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * We change the page here depending on the action performed against data source
     * if a new element was added to the end of the table - then change the page to the last
     * if a new element was added to the beginning of the table - then to the first page
     * @param changes
     */
    processPageChange(changes: any): void;
    shouldShow(): boolean;
    paginate(page: number): boolean;
    next(): boolean;
    prev(): boolean;
    getPage(): number;
    getPages(): Array<any>;
    getLast(): number;
    isPageOutOfBounce(): boolean;
    initPages(): void;
    onChangePerPage(event: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PagerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PagerComponent, "ng2-smart-table-pager", never, { "perPageSelect": "perPageSelect"; "source": "source"; }, { "changePage": "changePage"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBhZ2VyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTRCQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IERhdGFTb3VyY2UgfSBmcm9tICcuLi8uLi9saWIvZGF0YS1zb3VyY2UvZGF0YS1zb3VyY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUGFnZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHNvdXJjZTogRGF0YVNvdXJjZTtcbiAgICBwZXJQYWdlU2VsZWN0OiBhbnlbXTtcbiAgICBjaGFuZ2VQYWdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjdXJyZW50UGVyUGFnZTogYW55O1xuICAgIHByb3RlY3RlZCBwYWdlczogQXJyYXk8YW55PjtcbiAgICBwcm90ZWN0ZWQgcGFnZTogbnVtYmVyO1xuICAgIHByb3RlY3RlZCBjb3VudDogbnVtYmVyO1xuICAgIHByb3RlY3RlZCBwZXJQYWdlOiBudW1iZXI7XG4gICAgcHJvdGVjdGVkIGRhdGFDaGFuZ2VkU3ViOiBTdWJzY3JpcHRpb247XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogV2UgY2hhbmdlIHRoZSBwYWdlIGhlcmUgZGVwZW5kaW5nIG9uIHRoZSBhY3Rpb24gcGVyZm9ybWVkIGFnYWluc3QgZGF0YSBzb3VyY2VcbiAgICAgKiBpZiBhIG5ldyBlbGVtZW50IHdhcyBhZGRlZCB0byB0aGUgZW5kIG9mIHRoZSB0YWJsZSAtIHRoZW4gY2hhbmdlIHRoZSBwYWdlIHRvIHRoZSBsYXN0XG4gICAgICogaWYgYSBuZXcgZWxlbWVudCB3YXMgYWRkZWQgdG8gdGhlIGJlZ2lubmluZyBvZiB0aGUgdGFibGUgLSB0aGVuIHRvIHRoZSBmaXJzdCBwYWdlXG4gICAgICogQHBhcmFtIGNoYW5nZXNcbiAgICAgKi9cbiAgICBwcm9jZXNzUGFnZUNoYW5nZShjaGFuZ2VzOiBhbnkpOiB2b2lkO1xuICAgIHNob3VsZFNob3coKTogYm9vbGVhbjtcbiAgICBwYWdpbmF0ZShwYWdlOiBudW1iZXIpOiBib29sZWFuO1xuICAgIG5leHQoKTogYm9vbGVhbjtcbiAgICBwcmV2KCk6IGJvb2xlYW47XG4gICAgZ2V0UGFnZSgpOiBudW1iZXI7XG4gICAgZ2V0UGFnZXMoKTogQXJyYXk8YW55PjtcbiAgICBnZXRMYXN0KCk6IG51bWJlcjtcbiAgICBpc1BhZ2VPdXRPZkJvdW5jZSgpOiBib29sZWFuO1xuICAgIGluaXRQYWdlcygpOiB2b2lkO1xuICAgIG9uQ2hhbmdlUGVyUGFnZShldmVudDogYW55KTogdm9pZDtcbn1cbiJdfQ==
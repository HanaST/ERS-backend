import { ModuleWithProviders, TemplateRef, ViewContainerRef } from '@angular/core';
import { CdkPortal, CdkPortalOutlet, ComponentPortal, Portal, PortalInjector, TemplatePortal } from '@angular/cdk/portal';
import { ComponentType, ConnectedOverlayPositionChange, ConnectedPosition, ConnectionPositionPair, FlexibleConnectedPositionStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayPositionBuilder, OverlayRef, PositionStrategy, ScrollStrategy } from '@angular/cdk/overlay';
import { NbScrollStrategyOptions } from '../adapter/block-scroll-strategy-adapter';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/cdk/overlay';
import * as ɵngcc2 from '@angular/cdk/portal';
export declare class NbPortalDirective extends CdkPortal {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbPortalDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbPortalDirective, "[nbPortal]", never, {}, {}, never>;
}
export declare class NbPortalOutletDirective extends CdkPortalOutlet {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbPortalOutletDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbPortalOutletDirective, "[nbPortalOutlet]", never, {}, {}, never>;
}
export declare class NbComponentPortal<T = any> extends ComponentPortal<T> {
}
export declare class NbOverlay extends Overlay {
    scrollStrategies: NbScrollStrategyOptions;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbOverlay, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NbOverlay>;
}
export declare class NbOverlayPositionBuilder extends OverlayPositionBuilder {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbOverlayPositionBuilder, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NbOverlayPositionBuilder>;
}
export declare class NbTemplatePortal<T = any> extends TemplatePortal<T> {
    constructor(template: TemplateRef<T>, viewContainerRef?: ViewContainerRef, context?: T);
}
export declare class NbOverlayContainer extends OverlayContainer {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbOverlayContainer, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NbOverlayContainer>;
}
export declare class NbFlexibleConnectedPositionStrategy extends FlexibleConnectedPositionStrategy {
}
export declare class NbPortalInjector extends PortalInjector {
}
export declare type NbPortal<T = any> = Portal<T>;
export declare type NbOverlayRef = OverlayRef;
export declare type NbComponentType<T = any> = ComponentType<T>;
export declare type NbPositionStrategy = PositionStrategy;
export declare type NbConnectedPosition = ConnectedPosition;
export declare type NbConnectedOverlayPositionChange = ConnectedOverlayPositionChange;
export declare type NbConnectionPositionPair = ConnectionPositionPair;
export declare type NbOverlayConfig = OverlayConfig;
export declare type NbScrollStrategy = ScrollStrategy;
/**
 * This module helps us to keep all angular/cdk deps inside our cdk module via providing aliases.
 * Approach will help us move cdk in separate npm package and refactor nebular/theme code.
 * */
export declare class NbCdkMappingModule {
    static forRoot(): ModuleWithProviders<NbCdkMappingModule>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<NbCdkMappingModule, [typeof NbPortalDirective, typeof NbPortalOutletDirective], [typeof ɵngcc1.OverlayModule, typeof ɵngcc2.PortalModule], [typeof ɵngcc1.OverlayModule, typeof ɵngcc2.PortalModule, typeof NbPortalDirective, typeof NbPortalOutletDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<NbCdkMappingModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwcGluZy5kLnRzIiwic291cmNlcyI6WyJtYXBwaW5nLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFJQTs7O0FBQ0E7Ozs7QUFFQTs7Ozs7OztBQUtBOzs7O0FBRUE7Ozs7Ozs7QUFLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW9CQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIFRlbXBsYXRlUmVmLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZGtQb3J0YWwsIENka1BvcnRhbE91dGxldCwgQ29tcG9uZW50UG9ydGFsLCBQb3J0YWwsIFBvcnRhbEluamVjdG9yLCBUZW1wbGF0ZVBvcnRhbCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wb3J0YWwnO1xuaW1wb3J0IHsgQ29tcG9uZW50VHlwZSwgQ29ubmVjdGVkT3ZlcmxheVBvc2l0aW9uQ2hhbmdlLCBDb25uZWN0ZWRQb3NpdGlvbiwgQ29ubmVjdGlvblBvc2l0aW9uUGFpciwgRmxleGlibGVDb25uZWN0ZWRQb3NpdGlvblN0cmF0ZWd5LCBPdmVybGF5LCBPdmVybGF5Q29uZmlnLCBPdmVybGF5Q29udGFpbmVyLCBPdmVybGF5UG9zaXRpb25CdWlsZGVyLCBPdmVybGF5UmVmLCBQb3NpdGlvblN0cmF0ZWd5LCBTY3JvbGxTdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IE5iU2Nyb2xsU3RyYXRlZ3lPcHRpb25zIH0gZnJvbSAnLi4vYWRhcHRlci9ibG9jay1zY3JvbGwtc3RyYXRlZ3ktYWRhcHRlcic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYlBvcnRhbERpcmVjdGl2ZSBleHRlbmRzIENka1BvcnRhbCB7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYlBvcnRhbE91dGxldERpcmVjdGl2ZSBleHRlbmRzIENka1BvcnRhbE91dGxldCB7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkNvbXBvbmVudFBvcnRhbDxUID0gYW55PiBleHRlbmRzIENvbXBvbmVudFBvcnRhbDxUPiB7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYk92ZXJsYXkgZXh0ZW5kcyBPdmVybGF5IHtcbiAgICBzY3JvbGxTdHJhdGVnaWVzOiBOYlNjcm9sbFN0cmF0ZWd5T3B0aW9ucztcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iT3ZlcmxheVBvc2l0aW9uQnVpbGRlciBleHRlbmRzIE92ZXJsYXlQb3NpdGlvbkJ1aWxkZXIge1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJUZW1wbGF0ZVBvcnRhbDxUID0gYW55PiBleHRlbmRzIFRlbXBsYXRlUG9ydGFsPFQ+IHtcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8VD4sIHZpZXdDb250YWluZXJSZWY/OiBWaWV3Q29udGFpbmVyUmVmLCBjb250ZXh0PzogVCk7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYk92ZXJsYXlDb250YWluZXIgZXh0ZW5kcyBPdmVybGF5Q29udGFpbmVyIHtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iRmxleGlibGVDb25uZWN0ZWRQb3NpdGlvblN0cmF0ZWd5IGV4dGVuZHMgRmxleGlibGVDb25uZWN0ZWRQb3NpdGlvblN0cmF0ZWd5IHtcbn1cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iUG9ydGFsSW5qZWN0b3IgZXh0ZW5kcyBQb3J0YWxJbmplY3RvciB7XG59XG5leHBvcnQgZGVjbGFyZSB0eXBlIE5iUG9ydGFsPFQgPSBhbnk+ID0gUG9ydGFsPFQ+O1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYk92ZXJsYXlSZWYgPSBPdmVybGF5UmVmO1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYkNvbXBvbmVudFR5cGU8VCA9IGFueT4gPSBDb21wb25lbnRUeXBlPFQ+O1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYlBvc2l0aW9uU3RyYXRlZ3kgPSBQb3NpdGlvblN0cmF0ZWd5O1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYkNvbm5lY3RlZFBvc2l0aW9uID0gQ29ubmVjdGVkUG9zaXRpb247XG5leHBvcnQgZGVjbGFyZSB0eXBlIE5iQ29ubmVjdGVkT3ZlcmxheVBvc2l0aW9uQ2hhbmdlID0gQ29ubmVjdGVkT3ZlcmxheVBvc2l0aW9uQ2hhbmdlO1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYkNvbm5lY3Rpb25Qb3NpdGlvblBhaXIgPSBDb25uZWN0aW9uUG9zaXRpb25QYWlyO1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYk92ZXJsYXlDb25maWcgPSBPdmVybGF5Q29uZmlnO1xuZXhwb3J0IGRlY2xhcmUgdHlwZSBOYlNjcm9sbFN0cmF0ZWd5ID0gU2Nyb2xsU3RyYXRlZ3k7XG4vKipcbiAqIFRoaXMgbW9kdWxlIGhlbHBzIHVzIHRvIGtlZXAgYWxsIGFuZ3VsYXIvY2RrIGRlcHMgaW5zaWRlIG91ciBjZGsgbW9kdWxlIHZpYSBwcm92aWRpbmcgYWxpYXNlcy5cbiAqIEFwcHJvYWNoIHdpbGwgaGVscCB1cyBtb3ZlIGNkayBpbiBzZXBhcmF0ZSBucG0gcGFja2FnZSBhbmQgcmVmYWN0b3IgbmVidWxhci90aGVtZSBjb2RlLlxuICogKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iQ2RrTWFwcGluZ01vZHVsZSB7XG4gICAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOYkNka01hcHBpbmdNb2R1bGU+O1xufVxuIl19
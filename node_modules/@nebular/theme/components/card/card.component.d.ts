/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { NbComponentSize } from '../component-size';
import { NbComponentStatus } from '../component-status';
/**
 * Component intended to be used within the `<nb-card>` component.
 * It adds styles for a preset header section.
 *
 * @styles
 *
 * card-header-text-color:
 * card-header-text-font-family:
 * card-header-text-font-size:
 * card-header-text-font-weight:
 * card-header-text-line-height:
 * card-header-basic-background-color:
 * card-header-basic-text-color:
 * card-header-primary-background-color:
 * card-header-primary-text-color:
 * card-header-info-background-color:
 * card-header-info-text-color:
 * card-header-success-background-color:
 * card-header-success-text-color:
 * card-header-warning-background-color:
 * card-header-warning-text-color:
 * card-header-danger-background-color:
 * card-header-danger-text-color:
 * card-header-control-background-color:
 * card-header-control-text-color:
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbCardHeaderComponent {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCardHeaderComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCardHeaderComponent, "nb-card-header", never, {}, {}, never, ["*"]>;
}
/**
 * Component intended to be used within  the `<nb-card>` component.
 * Adds styles for a preset body section.
 */
export declare class NbCardBodyComponent {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCardBodyComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCardBodyComponent, "nb-card-body", never, {}, {}, never, ["*"]>;
}
/**
 * Component intended to be used within  the `<nb-card>` component.
 * Adds styles for a preset footer section.
 */
export declare class NbCardFooterComponent {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCardFooterComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCardFooterComponent, "nb-card-footer", never, {}, {}, never, ["*"]>;
}
/**
 * Basic content container component.
 *
 * Basic card example:
 * @stacked-example(Showcase, card/card-showcase.component)
 *
 * Basic card configuration:
 *
 * ```html
 * <nb-card>
 *   <nb-card-body>
 *     Card
 *   </nb-card-body>
 * </nb-card>
 * ```
 *
 * ### Installation
 *
 * Import `NbCardModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbCardModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Card with header and footer:
 * @stacked-example(With Header & Footer, card/card-full.component)
 *
 * Most of the time main card content goes to `nb-card-body`,
 * so it is styled and aligned in accordance with the header and footer.
 * In case you need a higher level of control, you can pass contend directly to `nb-card`,
 * so `nb-card-body` styling will not be applied.
 *
 * Consider an example with `nb-list` component:
 * @stacked-example(Card with list, card/card-without-body.component)
 *
 * Colored cards could be simply configured by providing a `status` property:
 * @stacked-example(Colored Card, card/card-colors.component)
 *
 * It is also possible to assign an `accent` property for a slight card highlight
 * as well as combine it with `status`:
 * @stacked-example(Accent Card, card/card-accents.component)
 *
 * Cards of smaller sizes could be combined and put on the same row with a bigger card so they have the same heights.
 * @stacked-example(Card sizes combinations, card/card-sizes-combinations.component)
 *
 * @additional-example(Multiple Sizes, card/card-sizes.component)
 *
 * @styles
 *
 * card-background-color:
 * card-text-color:
 * card-text-font-family:
 * card-text-font-size:
 * card-text-font-weight:
 * card-text-line-height:
 * card-border-width:
 * card-border-style:
 * card-border-color:
 * card-border-radius:
 * card-padding:
 * card-shadow:
 * card-divider-color:
 * card-divider-style:
 * card-divider-width:
 * card-height-tiny:
 * card-height-small:
 * card-height-medium:
 * card-height-large:
 * card-height-giant:
 * card-margin-bottom:
 * card-scrollbar-color:
 * card-scrollbar-background-color:
 * card-scrollbar-width:
 */
export declare class NbCardComponent {
    /**
     * Card size, available sizes:
     * tiny, small, medium, large, giant
     */
    get size(): '' | NbComponentSize;
    set size(value: '' | NbComponentSize);
    _size: '' | NbComponentSize;
    /**
     * Card status:
     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`
     */
    status: '' | NbComponentStatus;
    /**
     * Card accent (color of the top border):
     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`
     */
    accent: '' | NbComponentStatus;
    get tiny(): boolean;
    get small(): boolean;
    get medium(): boolean;
    get large(): boolean;
    get giant(): boolean;
    get primary(): boolean;
    get info(): boolean;
    get success(): boolean;
    get warning(): boolean;
    get danger(): boolean;
    get basic(): boolean;
    get control(): boolean;
    get hasAccent(): "" | "basic" | "primary" | "success" | "warning" | "danger" | "info" | "control";
    get primaryAccent(): boolean;
    get infoAccent(): boolean;
    get successAccent(): boolean;
    get warningAccent(): boolean;
    get dangerAccent(): boolean;
    get basicAccent(): boolean;
    get controlAccent(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCardComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCardComponent, "nb-card", never, { "status": "status"; "accent": "accent"; "size": "size"; }, {}, never, ["nb-card-header", "nb-card-body", "*", "nb-card-footer"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2FyZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlDQTs7O0FBQ0E7Ozs7Ozs7O0FBTUE7Ozs7Ozs7O0FBTUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1SEEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBOYkNvbXBvbmVudFNpemUgfSBmcm9tICcuLi9jb21wb25lbnQtc2l6ZSc7XG5pbXBvcnQgeyBOYkNvbXBvbmVudFN0YXR1cyB9IGZyb20gJy4uL2NvbXBvbmVudC1zdGF0dXMnO1xuLyoqXG4gKiBDb21wb25lbnQgaW50ZW5kZWQgdG8gYmUgdXNlZCB3aXRoaW4gdGhlIGA8bmItY2FyZD5gIGNvbXBvbmVudC5cbiAqIEl0IGFkZHMgc3R5bGVzIGZvciBhIHByZXNldCBoZWFkZXIgc2VjdGlvbi5cbiAqXG4gKiBAc3R5bGVzXG4gKlxuICogY2FyZC1oZWFkZXItdGV4dC1jb2xvcjpcbiAqIGNhcmQtaGVhZGVyLXRleHQtZm9udC1mYW1pbHk6XG4gKiBjYXJkLWhlYWRlci10ZXh0LWZvbnQtc2l6ZTpcbiAqIGNhcmQtaGVhZGVyLXRleHQtZm9udC13ZWlnaHQ6XG4gKiBjYXJkLWhlYWRlci10ZXh0LWxpbmUtaGVpZ2h0OlxuICogY2FyZC1oZWFkZXItYmFzaWMtYmFja2dyb3VuZC1jb2xvcjpcbiAqIGNhcmQtaGVhZGVyLWJhc2ljLXRleHQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci1wcmltYXJ5LWJhY2tncm91bmQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci1wcmltYXJ5LXRleHQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci1pbmZvLWJhY2tncm91bmQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci1pbmZvLXRleHQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci1zdWNjZXNzLWJhY2tncm91bmQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci1zdWNjZXNzLXRleHQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci13YXJuaW5nLWJhY2tncm91bmQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci13YXJuaW5nLXRleHQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci1kYW5nZXItYmFja2dyb3VuZC1jb2xvcjpcbiAqIGNhcmQtaGVhZGVyLWRhbmdlci10ZXh0LWNvbG9yOlxuICogY2FyZC1oZWFkZXItY29udHJvbC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogY2FyZC1oZWFkZXItY29udHJvbC10ZXh0LWNvbG9yOlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkNhcmRIZWFkZXJDb21wb25lbnQge1xufVxuLyoqXG4gKiBDb21wb25lbnQgaW50ZW5kZWQgdG8gYmUgdXNlZCB3aXRoaW4gIHRoZSBgPG5iLWNhcmQ+YCBjb21wb25lbnQuXG4gKiBBZGRzIHN0eWxlcyBmb3IgYSBwcmVzZXQgYm9keSBzZWN0aW9uLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkNhcmRCb2R5Q29tcG9uZW50IHtcbn1cbi8qKlxuICogQ29tcG9uZW50IGludGVuZGVkIHRvIGJlIHVzZWQgd2l0aGluICB0aGUgYDxuYi1jYXJkPmAgY29tcG9uZW50LlxuICogQWRkcyBzdHlsZXMgZm9yIGEgcHJlc2V0IGZvb3RlciBzZWN0aW9uLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkNhcmRGb290ZXJDb21wb25lbnQge1xufVxuLyoqXG4gKiBCYXNpYyBjb250ZW50IGNvbnRhaW5lciBjb21wb25lbnQuXG4gKlxuICogQmFzaWMgY2FyZCBleGFtcGxlOlxuICogQHN0YWNrZWQtZXhhbXBsZShTaG93Y2FzZSwgY2FyZC9jYXJkLXNob3djYXNlLmNvbXBvbmVudClcbiAqXG4gKiBCYXNpYyBjYXJkIGNvbmZpZ3VyYXRpb246XG4gKlxuICogYGBgaHRtbFxuICogPG5iLWNhcmQ+XG4gKiAgIDxuYi1jYXJkLWJvZHk+XG4gKiAgICAgQ2FyZFxuICogICA8L25iLWNhcmQtYm9keT5cbiAqIDwvbmItY2FyZD5cbiAqIGBgYFxuICpcbiAqICMjIyBJbnN0YWxsYXRpb25cbiAqXG4gKiBJbXBvcnQgYE5iQ2FyZE1vZHVsZWAgdG8geW91ciBmZWF0dXJlIG1vZHVsZS5cbiAqIGBgYHRzXG4gKiBATmdNb2R1bGUoe1xuICogICBpbXBvcnRzOiBbXG4gKiAgICAgLy8gLi4uXG4gKiAgICAgTmJDYXJkTW9kdWxlLFxuICogICBdLFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBQYWdlTW9kdWxlIHsgfVxuICogYGBgXG4gKiAjIyMgVXNhZ2VcbiAqXG4gKiBDYXJkIHdpdGggaGVhZGVyIGFuZCBmb290ZXI6XG4gKiBAc3RhY2tlZC1leGFtcGxlKFdpdGggSGVhZGVyICYgRm9vdGVyLCBjYXJkL2NhcmQtZnVsbC5jb21wb25lbnQpXG4gKlxuICogTW9zdCBvZiB0aGUgdGltZSBtYWluIGNhcmQgY29udGVudCBnb2VzIHRvIGBuYi1jYXJkLWJvZHlgLFxuICogc28gaXQgaXMgc3R5bGVkIGFuZCBhbGlnbmVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgaGVhZGVyIGFuZCBmb290ZXIuXG4gKiBJbiBjYXNlIHlvdSBuZWVkIGEgaGlnaGVyIGxldmVsIG9mIGNvbnRyb2wsIHlvdSBjYW4gcGFzcyBjb250ZW5kIGRpcmVjdGx5IHRvIGBuYi1jYXJkYCxcbiAqIHNvIGBuYi1jYXJkLWJvZHlgIHN0eWxpbmcgd2lsbCBub3QgYmUgYXBwbGllZC5cbiAqXG4gKiBDb25zaWRlciBhbiBleGFtcGxlIHdpdGggYG5iLWxpc3RgIGNvbXBvbmVudDpcbiAqIEBzdGFja2VkLWV4YW1wbGUoQ2FyZCB3aXRoIGxpc3QsIGNhcmQvY2FyZC13aXRob3V0LWJvZHkuY29tcG9uZW50KVxuICpcbiAqIENvbG9yZWQgY2FyZHMgY291bGQgYmUgc2ltcGx5IGNvbmZpZ3VyZWQgYnkgcHJvdmlkaW5nIGEgYHN0YXR1c2AgcHJvcGVydHk6XG4gKiBAc3RhY2tlZC1leGFtcGxlKENvbG9yZWQgQ2FyZCwgY2FyZC9jYXJkLWNvbG9ycy5jb21wb25lbnQpXG4gKlxuICogSXQgaXMgYWxzbyBwb3NzaWJsZSB0byBhc3NpZ24gYW4gYGFjY2VudGAgcHJvcGVydHkgZm9yIGEgc2xpZ2h0IGNhcmQgaGlnaGxpZ2h0XG4gKiBhcyB3ZWxsIGFzIGNvbWJpbmUgaXQgd2l0aCBgc3RhdHVzYDpcbiAqIEBzdGFja2VkLWV4YW1wbGUoQWNjZW50IENhcmQsIGNhcmQvY2FyZC1hY2NlbnRzLmNvbXBvbmVudClcbiAqXG4gKiBDYXJkcyBvZiBzbWFsbGVyIHNpemVzIGNvdWxkIGJlIGNvbWJpbmVkIGFuZCBwdXQgb24gdGhlIHNhbWUgcm93IHdpdGggYSBiaWdnZXIgY2FyZCBzbyB0aGV5IGhhdmUgdGhlIHNhbWUgaGVpZ2h0cy5cbiAqIEBzdGFja2VkLWV4YW1wbGUoQ2FyZCBzaXplcyBjb21iaW5hdGlvbnMsIGNhcmQvY2FyZC1zaXplcy1jb21iaW5hdGlvbnMuY29tcG9uZW50KVxuICpcbiAqIEBhZGRpdGlvbmFsLWV4YW1wbGUoTXVsdGlwbGUgU2l6ZXMsIGNhcmQvY2FyZC1zaXplcy5jb21wb25lbnQpXG4gKlxuICogQHN0eWxlc1xuICpcbiAqIGNhcmQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIGNhcmQtdGV4dC1jb2xvcjpcbiAqIGNhcmQtdGV4dC1mb250LWZhbWlseTpcbiAqIGNhcmQtdGV4dC1mb250LXNpemU6XG4gKiBjYXJkLXRleHQtZm9udC13ZWlnaHQ6XG4gKiBjYXJkLXRleHQtbGluZS1oZWlnaHQ6XG4gKiBjYXJkLWJvcmRlci13aWR0aDpcbiAqIGNhcmQtYm9yZGVyLXN0eWxlOlxuICogY2FyZC1ib3JkZXItY29sb3I6XG4gKiBjYXJkLWJvcmRlci1yYWRpdXM6XG4gKiBjYXJkLXBhZGRpbmc6XG4gKiBjYXJkLXNoYWRvdzpcbiAqIGNhcmQtZGl2aWRlci1jb2xvcjpcbiAqIGNhcmQtZGl2aWRlci1zdHlsZTpcbiAqIGNhcmQtZGl2aWRlci13aWR0aDpcbiAqIGNhcmQtaGVpZ2h0LXRpbnk6XG4gKiBjYXJkLWhlaWdodC1zbWFsbDpcbiAqIGNhcmQtaGVpZ2h0LW1lZGl1bTpcbiAqIGNhcmQtaGVpZ2h0LWxhcmdlOlxuICogY2FyZC1oZWlnaHQtZ2lhbnQ6XG4gKiBjYXJkLW1hcmdpbi1ib3R0b206XG4gKiBjYXJkLXNjcm9sbGJhci1jb2xvcjpcbiAqIGNhcmQtc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I6XG4gKiBjYXJkLXNjcm9sbGJhci13aWR0aDpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDYXJkQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBDYXJkIHNpemUsIGF2YWlsYWJsZSBzaXplczpcbiAgICAgKiB0aW55LCBzbWFsbCwgbWVkaXVtLCBsYXJnZSwgZ2lhbnRcbiAgICAgKi9cbiAgICBnZXQgc2l6ZSgpOiAnJyB8IE5iQ29tcG9uZW50U2l6ZTtcbiAgICBzZXQgc2l6ZSh2YWx1ZTogJycgfCBOYkNvbXBvbmVudFNpemUpO1xuICAgIF9zaXplOiAnJyB8IE5iQ29tcG9uZW50U2l6ZTtcbiAgICAvKipcbiAgICAgKiBDYXJkIHN0YXR1czpcbiAgICAgKiBgYmFzaWNgLCBgcHJpbWFyeWAsIGBpbmZvYCwgYHN1Y2Nlc3NgLCBgd2FybmluZ2AsIGBkYW5nZXJgLCBgY29udHJvbGBcbiAgICAgKi9cbiAgICBzdGF0dXM6ICcnIHwgTmJDb21wb25lbnRTdGF0dXM7XG4gICAgLyoqXG4gICAgICogQ2FyZCBhY2NlbnQgKGNvbG9yIG9mIHRoZSB0b3AgYm9yZGVyKTpcbiAgICAgKiBgYmFzaWNgLCBgcHJpbWFyeWAsIGBpbmZvYCwgYHN1Y2Nlc3NgLCBgd2FybmluZ2AsIGBkYW5nZXJgLCBgY29udHJvbGBcbiAgICAgKi9cbiAgICBhY2NlbnQ6ICcnIHwgTmJDb21wb25lbnRTdGF0dXM7XG4gICAgZ2V0IHRpbnkoKTogYm9vbGVhbjtcbiAgICBnZXQgc21hbGwoKTogYm9vbGVhbjtcbiAgICBnZXQgbWVkaXVtKCk6IGJvb2xlYW47XG4gICAgZ2V0IGxhcmdlKCk6IGJvb2xlYW47XG4gICAgZ2V0IGdpYW50KCk6IGJvb2xlYW47XG4gICAgZ2V0IHByaW1hcnkoKTogYm9vbGVhbjtcbiAgICBnZXQgaW5mbygpOiBib29sZWFuO1xuICAgIGdldCBzdWNjZXNzKCk6IGJvb2xlYW47XG4gICAgZ2V0IHdhcm5pbmcoKTogYm9vbGVhbjtcbiAgICBnZXQgZGFuZ2VyKCk6IGJvb2xlYW47XG4gICAgZ2V0IGJhc2ljKCk6IGJvb2xlYW47XG4gICAgZ2V0IGNvbnRyb2woKTogYm9vbGVhbjtcbiAgICBnZXQgaGFzQWNjZW50KCk6IFwiXCIgfCBcImJhc2ljXCIgfCBcInByaW1hcnlcIiB8IFwic3VjY2Vzc1wiIHwgXCJ3YXJuaW5nXCIgfCBcImRhbmdlclwiIHwgXCJpbmZvXCIgfCBcImNvbnRyb2xcIjtcbiAgICBnZXQgcHJpbWFyeUFjY2VudCgpOiBib29sZWFuO1xuICAgIGdldCBpbmZvQWNjZW50KCk6IGJvb2xlYW47XG4gICAgZ2V0IHN1Y2Nlc3NBY2NlbnQoKTogYm9vbGVhbjtcbiAgICBnZXQgd2FybmluZ0FjY2VudCgpOiBib29sZWFuO1xuICAgIGdldCBkYW5nZXJBY2NlbnQoKTogYm9vbGVhbjtcbiAgICBnZXQgYmFzaWNBY2NlbnQoKTogYm9vbGVhbjtcbiAgICBnZXQgY29udHJvbEFjY2VudCgpOiBib29sZWFuO1xufVxuIl19
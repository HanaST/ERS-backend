/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { NbComponentSize } from '../component-size';
import { NbComponentStatus } from '../component-status';
/**
 * Progress Bar is a component for indicating progress.
 *
 * Simple usage:
 *
 * ```html
 * <nb-progress-bar [value]="50"></nb-progress-bar>
 * ```
 * ### Installation
 *
 * Import `NbProgressBarModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbProgressBarModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Progress bar accepts property `value` in range 0-100
 * @stacked-example(Progress bar, progress-bar/progress-bar-showcase.component)
 *
 * Progress bar background could be configured by providing a `status` property:
 * @stacked-example(Progress bar status, progress-bar/progress-bar-status.component)
 *
 * Progress bar size (height and font-size) could be configured by providing a `size` property:
 * @stacked-example(Progress bar size, progress-bar/progress-bar-size.component)
 *
 * `displayValue` property shows current value inside progress bar. It's also possible to add custom text inside:
 * @stacked-example(Progress bar value, progress-bar/progress-bar-value.component)
 *
 * Progress bar supports `width` and `background-color` transition:
 * @stacked-example(Progress bar interactive, progress-bar/progress-bar-interactive.component)
 *
 * @styles
 *
 * progress-bar-animation-duration:
 * progress-bar-border-radius:
 * progress-bar-text-font-family:
 * progress-bar-tiny-height:
 * progress-bar-tiny-text-font-size:
 * progress-bar-tiny-text-font-weight:
 * progress-bar-tiny-text-line-height:
 * progress-bar-small-height:
 * progress-bar-small-text-font-size:
 * progress-bar-small-text-font-weight:
 * progress-bar-small-text-line-height:
 * progress-bar-medium-height:
 * progress-bar-medium-text-font-size:
 * progress-bar-medium-text-font-weight:
 * progress-bar-medium-text-line-height:
 * progress-bar-large-height:
 * progress-bar-large-text-font-size:
 * progress-bar-large-text-font-weight:
 * progress-bar-large-text-line-height:
 * progress-bar-giant-height:
 * progress-bar-giant-text-font-size:
 * progress-bar-giant-text-font-weight:
 * progress-bar-giant-text-line-height:
 * progress-bar-basic-background-color:
 * progress-bar-basic-filled-background-color:
 * progress-bar-basic-text-color:
 * progress-bar-primary-background-color:
 * progress-bar-primary-filled-background-color:
 * progress-bar-primary-text-color:
 * progress-bar-success-background-color:
 * progress-bar-success-filled-background-color:
 * progress-bar-success-text-color:
 * progress-bar-info-background-color:
 * progress-bar-info-filled-background-color:
 * progress-bar-info-text-color:
 * progress-bar-warning-background-color:
 * progress-bar-warning-filled-background-color:
 * progress-bar-warning-text-color:
 * progress-bar-danger-background-color:
 * progress-bar-danger-filled-background-color:
 * progress-bar-danger-text-color:
 * progress-bar-control-background-color:
 * progress-bar-control-filled-background-color:
 * progress-bar-control-text-color:
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbProgressBarComponent {
    /**
     * Progress bar value in percent (0 - 100)
     */
    value: number;
    /**
     * Progress bar background (`basic` (default), `primary`, `info`, `success`, `warning`, `danger`, `control`)
     */
    status: NbComponentStatus;
    /**
     * Progress bar size (`tiny`, `small`, `medium` (default), `large`, `giant`)
     */
    size: NbComponentSize;
    /**
     * Displays value inside progress bar
     */
    displayValue: boolean;
    get tiny(): boolean;
    get small(): boolean;
    get medium(): boolean;
    get large(): boolean;
    get giant(): boolean;
    get primary(): boolean;
    get success(): boolean;
    get info(): boolean;
    get warning(): boolean;
    get danger(): boolean;
    get basic(): boolean;
    get control(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbProgressBarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbProgressBarComponent, "nb-progress-bar", never, { "value": "value"; "status": "status"; "size": "size"; "displayValue": "displayValue"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtYmFyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwcm9ncmVzcy1iYXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkZBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkJBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuaW1wb3J0IHsgTmJDb21wb25lbnRTaXplIH0gZnJvbSAnLi4vY29tcG9uZW50LXNpemUnO1xuaW1wb3J0IHsgTmJDb21wb25lbnRTdGF0dXMgfSBmcm9tICcuLi9jb21wb25lbnQtc3RhdHVzJztcbi8qKlxuICogUHJvZ3Jlc3MgQmFyIGlzIGEgY29tcG9uZW50IGZvciBpbmRpY2F0aW5nIHByb2dyZXNzLlxuICpcbiAqIFNpbXBsZSB1c2FnZTpcbiAqXG4gKiBgYGBodG1sXG4gKiA8bmItcHJvZ3Jlc3MtYmFyIFt2YWx1ZV09XCI1MFwiPjwvbmItcHJvZ3Jlc3MtYmFyPlxuICogYGBgXG4gKiAjIyMgSW5zdGFsbGF0aW9uXG4gKlxuICogSW1wb3J0IGBOYlByb2dyZXNzQmFyTW9kdWxlYCB0byB5b3VyIGZlYXR1cmUgbW9kdWxlLlxuICogYGBgdHNcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICAvLyAuLi5cbiAqICAgICBOYlByb2dyZXNzQmFyTW9kdWxlLFxuICogICBdLFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBQYWdlTW9kdWxlIHsgfVxuICogYGBgXG4gKiAjIyMgVXNhZ2VcbiAqXG4gKiBQcm9ncmVzcyBiYXIgYWNjZXB0cyBwcm9wZXJ0eSBgdmFsdWVgIGluIHJhbmdlIDAtMTAwXG4gKiBAc3RhY2tlZC1leGFtcGxlKFByb2dyZXNzIGJhciwgcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci1zaG93Y2FzZS5jb21wb25lbnQpXG4gKlxuICogUHJvZ3Jlc3MgYmFyIGJhY2tncm91bmQgY291bGQgYmUgY29uZmlndXJlZCBieSBwcm92aWRpbmcgYSBgc3RhdHVzYCBwcm9wZXJ0eTpcbiAqIEBzdGFja2VkLWV4YW1wbGUoUHJvZ3Jlc3MgYmFyIHN0YXR1cywgcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci1zdGF0dXMuY29tcG9uZW50KVxuICpcbiAqIFByb2dyZXNzIGJhciBzaXplIChoZWlnaHQgYW5kIGZvbnQtc2l6ZSkgY291bGQgYmUgY29uZmlndXJlZCBieSBwcm92aWRpbmcgYSBgc2l6ZWAgcHJvcGVydHk6XG4gKiBAc3RhY2tlZC1leGFtcGxlKFByb2dyZXNzIGJhciBzaXplLCBwcm9ncmVzcy1iYXIvcHJvZ3Jlc3MtYmFyLXNpemUuY29tcG9uZW50KVxuICpcbiAqIGBkaXNwbGF5VmFsdWVgIHByb3BlcnR5IHNob3dzIGN1cnJlbnQgdmFsdWUgaW5zaWRlIHByb2dyZXNzIGJhci4gSXQncyBhbHNvIHBvc3NpYmxlIHRvIGFkZCBjdXN0b20gdGV4dCBpbnNpZGU6XG4gKiBAc3RhY2tlZC1leGFtcGxlKFByb2dyZXNzIGJhciB2YWx1ZSwgcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci12YWx1ZS5jb21wb25lbnQpXG4gKlxuICogUHJvZ3Jlc3MgYmFyIHN1cHBvcnRzIGB3aWR0aGAgYW5kIGBiYWNrZ3JvdW5kLWNvbG9yYCB0cmFuc2l0aW9uOlxuICogQHN0YWNrZWQtZXhhbXBsZShQcm9ncmVzcyBiYXIgaW50ZXJhY3RpdmUsIHByb2dyZXNzLWJhci9wcm9ncmVzcy1iYXItaW50ZXJhY3RpdmUuY29tcG9uZW50KVxuICpcbiAqIEBzdHlsZXNcbiAqXG4gKiBwcm9ncmVzcy1iYXItYW5pbWF0aW9uLWR1cmF0aW9uOlxuICogcHJvZ3Jlc3MtYmFyLWJvcmRlci1yYWRpdXM6XG4gKiBwcm9ncmVzcy1iYXItdGV4dC1mb250LWZhbWlseTpcbiAqIHByb2dyZXNzLWJhci10aW55LWhlaWdodDpcbiAqIHByb2dyZXNzLWJhci10aW55LXRleHQtZm9udC1zaXplOlxuICogcHJvZ3Jlc3MtYmFyLXRpbnktdGV4dC1mb250LXdlaWdodDpcbiAqIHByb2dyZXNzLWJhci10aW55LXRleHQtbGluZS1oZWlnaHQ6XG4gKiBwcm9ncmVzcy1iYXItc21hbGwtaGVpZ2h0OlxuICogcHJvZ3Jlc3MtYmFyLXNtYWxsLXRleHQtZm9udC1zaXplOlxuICogcHJvZ3Jlc3MtYmFyLXNtYWxsLXRleHQtZm9udC13ZWlnaHQ6XG4gKiBwcm9ncmVzcy1iYXItc21hbGwtdGV4dC1saW5lLWhlaWdodDpcbiAqIHByb2dyZXNzLWJhci1tZWRpdW0taGVpZ2h0OlxuICogcHJvZ3Jlc3MtYmFyLW1lZGl1bS10ZXh0LWZvbnQtc2l6ZTpcbiAqIHByb2dyZXNzLWJhci1tZWRpdW0tdGV4dC1mb250LXdlaWdodDpcbiAqIHByb2dyZXNzLWJhci1tZWRpdW0tdGV4dC1saW5lLWhlaWdodDpcbiAqIHByb2dyZXNzLWJhci1sYXJnZS1oZWlnaHQ6XG4gKiBwcm9ncmVzcy1iYXItbGFyZ2UtdGV4dC1mb250LXNpemU6XG4gKiBwcm9ncmVzcy1iYXItbGFyZ2UtdGV4dC1mb250LXdlaWdodDpcbiAqIHByb2dyZXNzLWJhci1sYXJnZS10ZXh0LWxpbmUtaGVpZ2h0OlxuICogcHJvZ3Jlc3MtYmFyLWdpYW50LWhlaWdodDpcbiAqIHByb2dyZXNzLWJhci1naWFudC10ZXh0LWZvbnQtc2l6ZTpcbiAqIHByb2dyZXNzLWJhci1naWFudC10ZXh0LWZvbnQtd2VpZ2h0OlxuICogcHJvZ3Jlc3MtYmFyLWdpYW50LXRleHQtbGluZS1oZWlnaHQ6XG4gKiBwcm9ncmVzcy1iYXItYmFzaWMtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHByb2dyZXNzLWJhci1iYXNpYy1maWxsZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHByb2dyZXNzLWJhci1iYXNpYy10ZXh0LWNvbG9yOlxuICogcHJvZ3Jlc3MtYmFyLXByaW1hcnktYmFja2dyb3VuZC1jb2xvcjpcbiAqIHByb2dyZXNzLWJhci1wcmltYXJ5LWZpbGxlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogcHJvZ3Jlc3MtYmFyLXByaW1hcnktdGV4dC1jb2xvcjpcbiAqIHByb2dyZXNzLWJhci1zdWNjZXNzLWJhY2tncm91bmQtY29sb3I6XG4gKiBwcm9ncmVzcy1iYXItc3VjY2Vzcy1maWxsZWQtYmFja2dyb3VuZC1jb2xvcjpcbiAqIHByb2dyZXNzLWJhci1zdWNjZXNzLXRleHQtY29sb3I6XG4gKiBwcm9ncmVzcy1iYXItaW5mby1iYWNrZ3JvdW5kLWNvbG9yOlxuICogcHJvZ3Jlc3MtYmFyLWluZm8tZmlsbGVkLWJhY2tncm91bmQtY29sb3I6XG4gKiBwcm9ncmVzcy1iYXItaW5mby10ZXh0LWNvbG9yOlxuICogcHJvZ3Jlc3MtYmFyLXdhcm5pbmctYmFja2dyb3VuZC1jb2xvcjpcbiAqIHByb2dyZXNzLWJhci13YXJuaW5nLWZpbGxlZC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogcHJvZ3Jlc3MtYmFyLXdhcm5pbmctdGV4dC1jb2xvcjpcbiAqIHByb2dyZXNzLWJhci1kYW5nZXItYmFja2dyb3VuZC1jb2xvcjpcbiAqIHByb2dyZXNzLWJhci1kYW5nZXItZmlsbGVkLWJhY2tncm91bmQtY29sb3I6XG4gKiBwcm9ncmVzcy1iYXItZGFuZ2VyLXRleHQtY29sb3I6XG4gKiBwcm9ncmVzcy1iYXItY29udHJvbC1iYWNrZ3JvdW5kLWNvbG9yOlxuICogcHJvZ3Jlc3MtYmFyLWNvbnRyb2wtZmlsbGVkLWJhY2tncm91bmQtY29sb3I6XG4gKiBwcm9ncmVzcy1iYXItY29udHJvbC10ZXh0LWNvbG9yOlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYlByb2dyZXNzQmFyQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBQcm9ncmVzcyBiYXIgdmFsdWUgaW4gcGVyY2VudCAoMCAtIDEwMClcbiAgICAgKi9cbiAgICB2YWx1ZTogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFByb2dyZXNzIGJhciBiYWNrZ3JvdW5kIChgYmFzaWNgIChkZWZhdWx0KSwgYHByaW1hcnlgLCBgaW5mb2AsIGBzdWNjZXNzYCwgYHdhcm5pbmdgLCBgZGFuZ2VyYCwgYGNvbnRyb2xgKVxuICAgICAqL1xuICAgIHN0YXR1czogTmJDb21wb25lbnRTdGF0dXM7XG4gICAgLyoqXG4gICAgICogUHJvZ3Jlc3MgYmFyIHNpemUgKGB0aW55YCwgYHNtYWxsYCwgYG1lZGl1bWAgKGRlZmF1bHQpLCBgbGFyZ2VgLCBgZ2lhbnRgKVxuICAgICAqL1xuICAgIHNpemU6IE5iQ29tcG9uZW50U2l6ZTtcbiAgICAvKipcbiAgICAgKiBEaXNwbGF5cyB2YWx1ZSBpbnNpZGUgcHJvZ3Jlc3MgYmFyXG4gICAgICovXG4gICAgZGlzcGxheVZhbHVlOiBib29sZWFuO1xuICAgIGdldCB0aW55KCk6IGJvb2xlYW47XG4gICAgZ2V0IHNtYWxsKCk6IGJvb2xlYW47XG4gICAgZ2V0IG1lZGl1bSgpOiBib29sZWFuO1xuICAgIGdldCBsYXJnZSgpOiBib29sZWFuO1xuICAgIGdldCBnaWFudCgpOiBib29sZWFuO1xuICAgIGdldCBwcmltYXJ5KCk6IGJvb2xlYW47XG4gICAgZ2V0IHN1Y2Nlc3MoKTogYm9vbGVhbjtcbiAgICBnZXQgaW5mbygpOiBib29sZWFuO1xuICAgIGdldCB3YXJuaW5nKCk6IGJvb2xlYW47XG4gICAgZ2V0IGRhbmdlcigpOiBib29sZWFuO1xuICAgIGdldCBiYXNpYygpOiBib29sZWFuO1xuICAgIGdldCBjb250cm9sKCk6IGJvb2xlYW47XG59XG4iXX0=
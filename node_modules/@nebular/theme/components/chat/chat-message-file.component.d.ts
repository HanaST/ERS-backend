/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { ChangeDetectorRef } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
export interface NbChatMessageFileIconPreview {
    url: string;
    icon: string;
}
export interface NbChatMessageFileImagePreview {
    url: string;
    type: string;
}
export declare type NbChatMessageFile = NbChatMessageFileIconPreview | NbChatMessageFileImagePreview;
/**
 * Chat message component.
 */
export declare class NbChatMessageFileComponent {
    protected cd: ChangeDetectorRef;
    protected domSanitizer: DomSanitizer;
    readyFiles: any[];
    /**
     * Message sender
     * @type {string}
     */
    message: string;
    /**
     * Message sender
     * @type {string}
     */
    sender: string;
    /**
     * Message send date
     * @type {Date}
     */
    date: Date;
    /**
     * Message send date format, default 'shortTime'
     * @type {string}
     */
    dateFormat: string;
    /**
     * Message file path
     * @type {Date}
     */
    set files(files: NbChatMessageFile[]);
    constructor(cd: ChangeDetectorRef, domSanitizer: DomSanitizer);
    isImage(file: NbChatMessageFile): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbChatMessageFileComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbChatMessageFileComponent, "nb-chat-message-file", never, { "dateFormat": "dateFormat"; "files": "files"; "message": "message"; "sender": "sender"; "date": "date"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhdC1tZXNzYWdlLWZpbGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNoYXQtbWVzc2FnZS1maWxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQU9BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5leHBvcnQgaW50ZXJmYWNlIE5iQ2hhdE1lc3NhZ2VGaWxlSWNvblByZXZpZXcge1xuICAgIHVybDogc3RyaW5nO1xuICAgIGljb246IHN0cmluZztcbn1cbmV4cG9ydCBpbnRlcmZhY2UgTmJDaGF0TWVzc2FnZUZpbGVJbWFnZVByZXZpZXcge1xuICAgIHVybDogc3RyaW5nO1xuICAgIHR5cGU6IHN0cmluZztcbn1cbmV4cG9ydCBkZWNsYXJlIHR5cGUgTmJDaGF0TWVzc2FnZUZpbGUgPSBOYkNoYXRNZXNzYWdlRmlsZUljb25QcmV2aWV3IHwgTmJDaGF0TWVzc2FnZUZpbGVJbWFnZVByZXZpZXc7XG4vKipcbiAqIENoYXQgbWVzc2FnZSBjb21wb25lbnQuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iQ2hhdE1lc3NhZ2VGaWxlQ29tcG9uZW50IHtcbiAgICBwcm90ZWN0ZWQgY2Q6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHByb3RlY3RlZCBkb21TYW5pdGl6ZXI6IERvbVNhbml0aXplcjtcbiAgICByZWFkeUZpbGVzOiBhbnlbXTtcbiAgICAvKipcbiAgICAgKiBNZXNzYWdlIHNlbmRlclxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICovXG4gICAgbWVzc2FnZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIE1lc3NhZ2Ugc2VuZGVyXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBzZW5kZXI6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBNZXNzYWdlIHNlbmQgZGF0ZVxuICAgICAqIEB0eXBlIHtEYXRlfVxuICAgICAqL1xuICAgIGRhdGU6IERhdGU7XG4gICAgLyoqXG4gICAgICogTWVzc2FnZSBzZW5kIGRhdGUgZm9ybWF0LCBkZWZhdWx0ICdzaG9ydFRpbWUnXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICBkYXRlRm9ybWF0OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogTWVzc2FnZSBmaWxlIHBhdGhcbiAgICAgKiBAdHlwZSB7RGF0ZX1cbiAgICAgKi9cbiAgICBzZXQgZmlsZXMoZmlsZXM6IE5iQ2hhdE1lc3NhZ2VGaWxlW10pO1xuICAgIGNvbnN0cnVjdG9yKGNkOiBDaGFuZ2VEZXRlY3RvclJlZiwgZG9tU2FuaXRpemVyOiBEb21TYW5pdGl6ZXIpO1xuICAgIGlzSW1hZ2UoZmlsZTogTmJDaGF0TWVzc2FnZUZpbGUpOiBib29sZWFuO1xufVxuIl19
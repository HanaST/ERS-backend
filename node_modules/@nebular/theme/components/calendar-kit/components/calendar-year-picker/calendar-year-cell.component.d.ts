/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { EventEmitter } from '@angular/core';
import { NbDateService } from '../../services/date.service';
import { NbCalendarCell, NbCalendarSize, NbCalendarSizeValues } from '../../model';
import * as ɵngcc0 from '@angular/core';
export declare class NbCalendarYearCellComponent<D> implements NbCalendarCell<D, D> {
    protected dateService: NbDateService<D>;
    date: D;
    min: D;
    max: D;
    selectedValue: D;
    size: NbCalendarSize;
    static ngAcceptInputType_size: NbCalendarSizeValues;
    select: EventEmitter<D>;
    constructor(dateService: NbDateService<D>);
    get selected(): boolean;
    get today(): boolean;
    get disabled(): boolean;
    get isLarge(): boolean;
    yearCellClass: boolean;
    get year(): number;
    onClick(): void;
    private smallerThanMin;
    private greaterThanMax;
    private yearStart;
    private yearEnd;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCalendarYearCellComponent<any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCalendarYearCellComponent<any>, "nb-calendar-year-cell", never, { "size": "size"; "date": "date"; "min": "min"; "max": "max"; "selectedValue": "selectedValue"; }, { "select": "select"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXIteWVhci1jZWxsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYWxlbmRhci15ZWFyLWNlbGwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztBQVFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmJEYXRlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBOYkNhbGVuZGFyQ2VsbCwgTmJDYWxlbmRhclNpemUsIE5iQ2FsZW5kYXJTaXplVmFsdWVzIH0gZnJvbSAnLi4vLi4vbW9kZWwnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDYWxlbmRhclllYXJDZWxsQ29tcG9uZW50PEQ+IGltcGxlbWVudHMgTmJDYWxlbmRhckNlbGw8RCwgRD4ge1xuICAgIHByb3RlY3RlZCBkYXRlU2VydmljZTogTmJEYXRlU2VydmljZTxEPjtcbiAgICBkYXRlOiBEO1xuICAgIG1pbjogRDtcbiAgICBtYXg6IEQ7XG4gICAgc2VsZWN0ZWRWYWx1ZTogRDtcbiAgICBzaXplOiBOYkNhbGVuZGFyU2l6ZTtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfc2l6ZTogTmJDYWxlbmRhclNpemVWYWx1ZXM7XG4gICAgc2VsZWN0OiBFdmVudEVtaXR0ZXI8RD47XG4gICAgY29uc3RydWN0b3IoZGF0ZVNlcnZpY2U6IE5iRGF0ZVNlcnZpY2U8RD4pO1xuICAgIGdldCBzZWxlY3RlZCgpOiBib29sZWFuO1xuICAgIGdldCB0b2RheSgpOiBib29sZWFuO1xuICAgIGdldCBkaXNhYmxlZCgpOiBib29sZWFuO1xuICAgIGdldCBpc0xhcmdlKCk6IGJvb2xlYW47XG4gICAgeWVhckNlbGxDbGFzczogYm9vbGVhbjtcbiAgICBnZXQgeWVhcigpOiBudW1iZXI7XG4gICAgb25DbGljaygpOiB2b2lkO1xuICAgIHByaXZhdGUgc21hbGxlclRoYW5NaW47XG4gICAgcHJpdmF0ZSBncmVhdGVyVGhhbk1heDtcbiAgICBwcml2YXRlIHllYXJTdGFydDtcbiAgICBwcml2YXRlIHllYXJFbmQ7XG59XG4iXX0=
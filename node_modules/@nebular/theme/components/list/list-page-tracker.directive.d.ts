import { QueryList, ElementRef, AfterViewInit, OnDestroy, EventEmitter } from '@angular/core';
import 'intersection-observer';
/**
 * List pager directive
 *
 * Directive allows you to determine page of currently viewing items.
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbListPageTrackerDirective implements AfterViewInit, OnDestroy {
    private destroy$;
    private observer;
    private currentPage;
    /**
     * Items per page.
     */
    pageSize: number;
    /**
     * Page to start counting with.
     */
    startPage: number;
    /**
     * Emits when another page become visible.
     */
    pageChange: EventEmitter<number>;
    listItems: QueryList<ElementRef>;
    constructor();
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private observeItems;
    private checkForPageChange;
    private findMostVisiblePage;
    private elementIndex;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbListPageTrackerDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<NbListPageTrackerDirective, "[nbListPageTracker]", never, { "startPage": "startPage"; "pageSize": "pageSize"; }, { "pageChange": "pageChange"; }, ["listItems"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1wYWdlLXRyYWNrZXIuZGlyZWN0aXZlLmQudHMiLCJzb3VyY2VzIjpbImxpc3QtcGFnZS10cmFja2VyLmRpcmVjdGl2ZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7QUFRQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3QkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRdWVyeUxpc3QsIEVsZW1lbnRSZWYsIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgJ2ludGVyc2VjdGlvbi1vYnNlcnZlcic7XG4vKipcbiAqIExpc3QgcGFnZXIgZGlyZWN0aXZlXG4gKlxuICogRGlyZWN0aXZlIGFsbG93cyB5b3UgdG8gZGV0ZXJtaW5lIHBhZ2Ugb2YgY3VycmVudGx5IHZpZXdpbmcgaXRlbXMuXG4gKlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkxpc3RQYWdlVHJhY2tlckRpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBwcml2YXRlIG9ic2VydmVyO1xuICAgIHByaXZhdGUgY3VycmVudFBhZ2U7XG4gICAgLyoqXG4gICAgICogSXRlbXMgcGVyIHBhZ2UuXG4gICAgICovXG4gICAgcGFnZVNpemU6IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBQYWdlIHRvIHN0YXJ0IGNvdW50aW5nIHdpdGguXG4gICAgICovXG4gICAgc3RhcnRQYWdlOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogRW1pdHMgd2hlbiBhbm90aGVyIHBhZ2UgYmVjb21lIHZpc2libGUuXG4gICAgICovXG4gICAgcGFnZUNoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgbGlzdEl0ZW1zOiBRdWVyeUxpc3Q8RWxlbWVudFJlZj47XG4gICAgY29uc3RydWN0b3IoKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIHByaXZhdGUgb2JzZXJ2ZUl0ZW1zO1xuICAgIHByaXZhdGUgY2hlY2tGb3JQYWdlQ2hhbmdlO1xuICAgIHByaXZhdGUgZmluZE1vc3RWaXNpYmxlUGFnZTtcbiAgICBwcml2YXRlIGVsZW1lbnRJbmRleDtcbn1cbiJdfQ==